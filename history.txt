naive_bayes: 0.7437567132116004
SVM simple 0.6479591836734694
SVM with lens + ngram: 0.7316058002148227

Data size 3000
log with pipe roc, precision, recall: (0.8070060207991243, 0.9276018099547512, 0.6507936507936508)
(jbbe)~>python3 fake_classifiers.py 
Data size 3000
log with pipe roc, precision, recall: (0.7563710499490316, 0.8127490039840638, 0.6238532110091743)
(jbbe)~>python3 fake_classifiers.py 
Data size 3000
log with pipe roc, precision, recall: (0.7810470466503754, 0.9077669902912622, 0.6051779935275081)Data size 4000

Data size 1000
score = 0.81
{'FeatureUnion__content_tfidf__tfidf__min_df': 3, 'log_reg__C': 100}

Data size 4000
score = 0.87
{'FeatureUnion__content_tfidf__tfidf__min_df': 3, 'log_reg__C': 1000}

score = 0.87
{'FeatureUnion__content_tfidf__tfidf__min_df': 3, 'log_reg__C': 1000}

Data size 3000
score = 0.85
{'FeatureUnion__content_tfidf__tfidf__min_df': 3, 'clf': LogisticRegression(C=1000, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=100,
                   multi_class='warn', n_jobs=None, penalty='l2',
                   random_state=None, solver='warn', tol=0.0001, verbose=0,
                   warm_start=False)}


Data size 4000
score = 0.85                                                         
{'clf__solver': 'sag'}

Data size 4000
Pipeline(memory=None,
         steps=[('FeatureUnion',
                 FeatureUnion(n_jobs=None,
                              transformer_list=[('title_tfidf',
                                                 Pipeline(memory=None,
                                                          steps=[('extract_field',
                                                                  FunctionTransformer(accept_sparse=False,
                                                                                      check_inverse=True,
                                                                                      func=<function classifier_pipe.<locals>.<lambda> at 0x104f2bc80>,
                                                                                      inv_kw_args=None,
                                                                                      inverse_func=None,
                                                                                      kw_args=None,
                                                                                      pass_y='deprecated',
                                                                                      validate=False...
                                                                                  tokenizer=None,
                                                                                  use_idf=True,
                                                                                  vocabulary=None))],
                                                          verbose=False))],
                              transformer_weights=None, verbose=False)),
                ('clf',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=100,
                                    multi_class='warn', n_jobs=None,
                                    penalty='l2', random_state=None,
                                    solver='sag', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
score = 0.85
{'FeatureUnion__content_tfidf__tfidf__ngram_range': (1, 2)}

Data size 4000
Pipeline(memory=None,
         steps=[('FeatureUnion',
                 FeatureUnion(n_jobs=None,
                              transformer_list=[('title_tfidf',
                                                 Pipeline(memory=None,
                                                          steps=[('extract_field',
                                                                  FunctionTransformer(accept_sparse=False,
                                                                                      check_inverse=True,
                                                                                      func=<function classifier_pipe.<locals>.<lambda> at 0x109bd70d0>,
                                                                                      inv_kw_args=None,
                                                                                      inverse_func=None,
                                                                                      kw_args=None,
                                                                                      pass_y='deprecated',
                                                                                      validate=False...
                                                                                  tokenizer=None,
                                                                                  use_idf=True,
                                                                                  vocabulary=None))],
                                                          verbose=False))],
                              transformer_weights=None, verbose=False)),
                ('clf',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=100,
                                    multi_class='warn', n_jobs=None,
                                    penalty='l2', random_state=None,
                                    solver='sag', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
score = 0.87
{'FeatureUnion__content_tfidf__tfidf__ngram_range': (1, 5), 'FeatureUnion__title_tfidf__tfidf__lowercase': False

Data size 4000
Pipeline(memory=None,
         steps=[('FeatureUnion',
                 FeatureUnion(n_jobs=None,
                              transformer_list=[('title_tfidf',
                                                 Pipeline(memory=None,
                                                          steps=[('extract_field',
                                                                  FunctionTransformer(accept_sparse=False,
                                                                                      check_inverse=True,
                                                                                      func=<function classifier_pipe.<locals>.<lambda> at 0x102f820d0>,
                                                                                      inv_kw_args=None,
                                                                                      inverse_func=None,
                                                                                      kw_args=None,
                                                                                      pass_y='deprecated',
                                                                                      validate=False...
                                                                                  tokenizer=None,
                                                                                  use_idf=True,
                                                                                  vocabulary=None))],
                                                          verbose=False))],
                              transformer_weights=None, verbose=False)),
                ('clf',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=100,
                                    multi_class='warn', n_jobs=None,
                                    penalty='l2', random_state=None,
                                    solver='sag', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
score = 0.87
{'FeatureUnion__content_tfidf__tfidf__lowercase': False, 'FeatureUnion__content_tfidf__tfidf__ngram_range': (1, 7)}



Data size 4000
Pipeline(memory=None,
         steps=[('FeatureUnion',
                 FeatureUnion(n_jobs=None,
                              transformer_list=[('title_tfidf',
                                                 Pipeline(memory=None,
                                                          steps=[('extract_field',
                                                                  FunctionTransformer(accept_sparse=False,
                                                                                      check_inverse=True,
                                                                                      func=<function classifier_pipe.<locals>.<lambda> at 0x11eaf6048>,
                                                                                      inv_kw_args=None,
                                                                                      inverse_func=None,
                                                                                      kw_args=None,
                                                                                      pass_y='deprecated',
                                                                                      validate=False...
                                                                                  tokenizer=None,
                                                                                  use_idf=True,
                                                                                  vocabulary=None))],
                                                          verbose=False))],
                              transformer_weights=None, verbose=False)),
                ('clf',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=100,
                                    multi_class='warn', n_jobs=None,
                                    penalty='l2', random_state=None,
                                    solver='sag', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
score = 0.88
{'FeatureUnion__content_tfidf__tfidf__ngram_range': (1, 9), 'FeatureUnion__title_tfidf__tfidf__ngram_range': (1, 3)}

Data size 4000
Pipeline(memory=None,
         steps=[('FeatureUnion',
                 FeatureUnion(n_jobs=None,
                              transformer_list=[('title_tfidf',
                                                 Pipeline(memory=None,
                                                          steps=[('extract_field',
                                                                  FunctionTransformer(accept_sparse=False,
                                                                                      check_inverse=True,
                                                                                      func=<function classifier_pipe.<locals>.<lambda> at 0x11cb3d510>,
                                                                                      inv_kw_args=None,
                                                                                      inverse_func=None,
                                                                                      kw_args=None,
                                                                                      pass_y='deprecated',
                                                                                      validate=False...
                                                                                  tokenizer=None,
                                                                                  use_idf=True,
                                                                                  vocabulary=None))],
                                                          verbose=False))],
                              transformer_weights=None, verbose=False)),
                ('clf',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=100,
                                    multi_class='warn', n_jobs=-1, penalty='l2',
                                    random_state=None, solver='sag', tol=0.0001,
                                    verbose=0, warm_start=False))],
         verbose=False)
score = 0.88
{'FeatureUnion__content_tfidf__tfidf__ngram_range': (1, 9)}
roc_auc: 0.9584716128927814

Data size 4000
Pipeline(memory=None,
         steps=[('FeatureUnion',
                 FeatureUnion(n_jobs=None,
                              transformer_list=[('title_tfidf',
                                                 Pipeline(memory=None,
                                                          steps=[('extract_field',
                                                                  FunctionTransformer(accept_sparse=False,
                                                                                      check_inverse=True,
                                                                                      func=<function classifier_pipe.<locals>.<lambda> at 0x11af8d7b8>,
                                                                                      inv_kw_args=None,
                                                                                      inverse_func=None,
                                                                                      kw_args=None,
                                                                                      pass_y='deprecated',
                                                                                      validate=False...
                                                                                  tokenizer=None,
                                                                                  use_idf=True,
                                                                                  vocabulary=None))],
                                                          verbose=False))],
                              transformer_weights=None, verbose=False)),
                ('clf',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=100,
                                    multi_class='warn', n_jobs=-1, penalty='l2',
                                    random_state=None, solver='sag', tol=0.0001,
                                    verbose=0, warm_start=False))],
         verbose=False)
score = 0.92
{'FeatureUnion__content_tfidf__tfidf__ngram_range': (1, 9)}
roc_auc: 0.9771855210631262

Data size 3000
Pipeline(memory=None,
         steps=[('FeatureUnion',
                 FeatureUnion(n_jobs=None,
                              transformer_list=[('title_tfidf',
                                                 Pipeline(memory=None,
                                                          steps=[('extract_field',
                                                                  FunctionTransformer(accept_sparse=False,
                                                                                      check_inverse=True,
                                                                                      func=<function classifier_pipe.<locals>.<lambda> at 0x119bb57b8>,
                                                                                      inv_kw_args=None,
                                                                                      inverse_func=None,
                                                                                      kw_args=None,
                                                                                      pass_y='deprecated',
                                                                                      validate=False...
                                                                                  tokenizer=None,
                                                                                  use_idf=True,
                                                                                  vocabulary=None))],
                                                          verbose=False))],
                              transformer_weights=None, verbose=False)),
                ('clf',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=100,
                                    multi_class='warn', n_jobs=-1, penalty='l2',
                                    random_state=None, solver='sag', tol=0.0001,
                                    verbose=0, warm_start=False))],
         verbose=False)
score = 0.88
{'FeatureUnion__content_tfidf__tfidf__ngram_range': (1, 9)}
roc_auc: 0.9592236687770015
precision: 0.9130434782608695
recall: 0.7949526813880127

n=1000
with sent_lens
Pipeline(memory=None,
         steps=[('FeatureUnion',
                 FeatureUnion(n_jobs=None,
                              transformer_list=[('title_tfidf',
                                                 Pipeline(memory=None,
                                                          steps=[('extract_field',
                                                                  FunctionTransformer(accept_sparse=False,
                                                                                      check_inverse=True,
                                                                                      func=<function classifier_pipe.<locals>.<lambda> at 0x118b35048>,
                                                                                      inv_kw_args=None,
                                                                                      inverse_func=None,
                                                                                      kw_args=None,
                                                                                      pass_y='deprecated',
                                                                                      validate=False...
                                                                                  tokenizer=None,
                                                                                  use_idf=True,
                                                                                  vocabulary=None))],
                                                          verbose=False))],
                              transformer_weights=None, verbose=False)),
                ('clf',
                 LogisticRegression(C=100, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=8000,
                                    multi_class='warn', n_jobs=-1, penalty='l2',
                                    random_state=None, solver='sag', tol=0.0001,
                                    verbose=0, warm_start=False))],
         verbose=False)
score = 0.87
{}
roc_auc: 0.9523993808049536
precision: 0.9019607843137255
recall: 0.8070175438596491
without_sent_lens
Pipeline(memory=None,
         steps=[('FeatureUnion',
                 FeatureUnion(n_jobs=None,
                              transformer_list=[('title_tfidf',
                                                 Pipeline(memory=None,
                                                          steps=[('extract_field',
                                                                  FunctionTransformer(accept_sparse=False,
                                                                                      check_inverse=True,
                                                                                      func=<function classifier_pipe.<locals>.<lambda> at 0x12c9db048>,
                                                                                      inv_kw_args=None,
                                                                                      inverse_func=None,
                                                                                      kw_args=None,
                                                                                      pass_y='deprecated',
                                                                                      validate=False...
                                                                                  tokenizer=None,
                                                                                  use_idf=True,
                                                                                  vocabulary=None))],
                                                          verbose=False))],
                              transformer_weights=None, verbose=False)),
                ('clf',
                 LogisticRegression(C=100, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=8000,
                                    multi_class='warn', n_jobs=-1, penalty='l2',
                                    random_state=None, solver='sag', tol=0.0001,
                                    verbose=0, warm_start=False))],
         verbose=False)
score = 0.87
{}
roc_auc: 0.9523348813209495
precision: 0.9019607843137255
recall: 0.8070175438596491
